; demoR.a: Demonstrating shift commands srl, sra, sll
;
; This program shows the effects of shifting operations 
; on positive and negative numbers.
; We use dout to display the results and nl for new lines.

        ; Initialize r0 with a positive number
        mov r0, 16      ; r0 = 16 (binary 0000 0000 0001 0000)
        ; Shift r0 right logically by 1 (divide by 2, zeros shifted in)
        srl r0, 1       ; r0 = r0 >> 1 (logical shift right)
        ; After srl, r0 should be 8 (binary 0000 0000 0000 1000)
        dout r0         ; Output: 8
        nl

        ; Initialize r1 with a negative number
        mov r1, -16     ; r1 = -16 (binary 1111 1111 1111 0000)
        ; Shift r1 right logically by 1 (zeros shifted in)
        srl r1, 1       ; r1 = r1 >> 1 (logical shift right)
        ; After srl, r1 becomes a large positive number due to zeros shifted in
        dout r1         ; Output: 32760
        nl

        ; Now shift r1 right arithmetically by 1 (sign bit replicated)
        mov r1, -16     ; Reset r1 to -16
        sra r1, 1       ; r1 = r1 >> 1 (arithmetic shift right)
        ; After sra, r1 remains negative
        dout r1         ; Output: -8
        nl

        ; Shift r0 left logically by 1 (multiply by 2)
        mov r0, 16      ; Reset r0 to 16
        sll r0, 1       ; r0 = r0 << 1 (logical shift left)
        ; After sll, r0 should be 32 (binary 0000 0000 0010 0000)
        dout r0         ; Output: 32
        nl

        ; Demonstrate that shifting left multiplies by powers of 2
        ; Shift r0 left by 2 (multiply by 4)
        mov r0, 3       ; r0 = 3
        sll r0, 2       ; r0 = r0 << 2
        ; After sll, r0 should be 12 (3 * 4)
        dout r0         ; Output: 12
        nl

        halt

; Practical applications:
; - Left shift (`sll`) is used for fast multiplication by 
;   powers of 2.
; - Right shift (`sra`) is used for division by powers of 
;   2 while preserving the sign.
; - Logical right shift (`srl`) is useful for unsigned 
;   binary arithmetic and bit manipulation.
